# Main NGINX configuration

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Define rate limiting zones
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=ip_block:10m rate=100r/s;

    # Define cache path for "my_cache"
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m inactive=60m use_temp_path=off;

    # Include blocked IPs file
    include /etc/nginx/blocked_ips.conf;  # This matches the script's path

    # HTTP server configuration (for non-SSL traffic)
    server {
        listen 8080;
        server_name localhost.com;

        # Redirect HTTP to HTTPS (uncomment the next line for production)
        # return 301 https://$host$request_uri;

        # Limit maximum request body size to 50MB
        client_max_body_size 50M;

        # Redirect all 404 errors to the undefined_routes.ejs page
        error_page 404 /undefined_routes.ejs;

        location = /undefined_routes.ejs {
            root /home/abdull/workspace/projects/nodeApp/feature/dist/app/views;
            internal;  # Ensures the page cannot be accessed directly by users
        }

        # Main location block for reverse proxy
        location / {
            # Apply rate limiting
            limit_req zone=mylimit burst=20 nodelay;
            limit_req zone=ip_block burst=100 nodelay;

            # If the rate limit is exceeded, NGINX will return a 429 error
            error_page 429 = /rate_limit_exceeded;

            # Log IP information and requests to a separate log file
            access_log /var/log/nginx/nginx_blocked_ips_$binary_remote_addr.log combined;

            # Proxy settings
            proxy_pass http://localhost:8010;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Caching settings
            # proxy_cache my_cache;  # Now "my_cache" is defined
            # proxy_cache_valid 200 10m;
            # proxy_cache_use_stale error timeout updating;
        }

        # Handle requests that exceed the rate limit
        location = /rate_limit_exceeded {
            return 429 "Too Many Requests\n";
        }

        # Serve static files (optional)
        # location /static/ {
        #     root /path/to/static/files;
        #     try_files $uri $uri/ =404;
        # }

        # Security headers (recommended for production)
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";

        # Logging (recommended)
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
    }

    # HTTPS server configuration (uncomment to enable SSL support)
    # server {
    #     listen 443 ssl;
    #     server_name yourdomain.com;
    #
    #     # SSL certificate settings
    #     ssl_certificate /etc/nginx/ssl/yourdomain.com.crt;
    #     ssl_certificate_key /etc/nginx/ssl/yourdomain.com.key;
    #
    #     # Strong SSL security settings (recommended for production)
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers on;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #
    #     # Redirect HTTP traffic to HTTPS (recommended)
    #     # return 301 https://$host$request_uri;
    #
    #     location / {
    #         proxy_pass http://application:8010;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_cache_bypass $http_upgrade;
    #
    #         # Caching settings (uncomment for production)
    #         # proxy_cache my_cache;
    #         # proxy_cache_valid 200 10m;
    #         # proxy_cache_use_stale error timeout updating;
    #     }
    #
    #     # Security headers (recommended for production)
    #     add_header X-Content-Type-Options nosniff;
    #     add_header X-Frame-Options DENY;
    #     add_header X-XSS-Protection "1; mode=block";
    #
    #     # Logging (recommended)
    #     access_log /var/log/nginx/access.log;
    #     error_log /var/log/nginx/error.log;
    # }
}