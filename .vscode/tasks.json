{
	// See https://go.microsoft.com/fwlink/?LinkId=733558
	// for the documentation about the tasks.json format
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Migration - create migration",
			"type": "shell",
			"command": "sh 000_create_migration.sh",
			"group": "build",
			"options": {
				"cwd": "${workspaceFolder}/src/core/database/migrations/shell"
			},
			"problemMatcher": []
		},
		{
			"label": "Controller - create controller",
			"type": "shell",
			"command": "sh create_controller.sh",
			"group": "build",
			"options": {
				"cwd": "${workspaceFolder}/src/core/controller/"
			},
			"problemMatcher": []
		},
		{
			"label": "API Controller - create api controller",
			"type": "shell",
			"command": "sh create_api_controller.sh",
			"group": "build",
			"options": {
				"cwd": "${workspaceFolder}/src/core/api/"
			},
			"problemMatcher": []
		},
		{
			"label": "SASS Compile",
			"type": "shell",
			"command": "npx sass --update -c --verbose dist/app/public/sass:dist/app/public/css --style=compressed",
			"group": "build"
		},
		{
			"label": "SASS force recompile",
			"type": "shell",
			"command": "rm -rf dist/app/public/css; npx sass --update -c --verbose dist/app/public/sass:dist/app/public/css --style=compressed",
			"group": "build",
			"problemMatcher": ["$node-sass"]
		},
		{
			"label": "Read Migrations",
			"type": "shell",
			"command": "node dist/core/database/migrations/execute_migrations/ExecuteSQL.js",
			"group": "build"
		},
		{
			"label": "Initiate MongoDB RBAC",
			"type": "shell",
			"command": "node dist/core/database/RBAC/initiateMongoDB.js",
			"group": "build"
		},
		{
			"label": "Requests tester dev server",
			"type": "shell",
			"command": "node_modules/autocannon/autocannon.js  https://localhost:8010",
			"group": "build"
		},
		{
			"label": "Clean npm cache",
			"type": "shell",
			"command": "npm cache clean --force",
			"group": "build"
		},
		{
			"label": "Compile typescript",
			"type": "shell",
			"command": "sudo node_modules/typescript/bin/tsc",
			"group": "build"
		},
		{
			"label": "Compile typescript and watch",
			"type": "shell",
			"command": "sudo node_modules/typescript/bin/tsc --watch",
			"group": "build"
		},
		{
			"label": "PM2 List Apps",
			"type": "shell",
			"command": "npx pm2 list",
			"group": "build"
		},
		{
			"label": "Run Server With Nodemon",
			"type": "shell",
			"command": "npm run start-nodemon",
			"group": "build"
		},
		{
			"label": "PM2 Cluster Max",
			"type": "shell",
			"command": "node dist/core/database/migrations/execute_migrations/ExecuteSQL.js && npx pm2-runtime start dist/Server.js -i max --name node",
			"options": {
				"env": {
					"EXECUTION_POINT": "PM2"
				}
			},
			"group": "build"
		},
		{
			"label": "PM2 cluster one process",
			"type": "shell",
			"command": "node dist/core/database/migrations/execute_migrations/ExecuteSQL.js && npx pm2-runtime start dist/Server.js -i 1  --name node",
			"options": {
				"env": {
					"EXECUTION_POINT": "PM2"
				}
			},
			"group": "build"
		},
		{
			"label": "Docker build node js (development)",
			"type": "shell",
			"command": "docker system prune -f && docker volume prune -f && docker-compose -f docker-compose-development.yml build --build-arg NODE_ENV=development && docker-compose -f docker-compose-development.yml up --force-recreate",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Docker Logs for httpbin and nodeapp",
			"type": "shell",
			"command": "docker-compose -f docker-compose-development.yml logs -f httpbin nodeapp",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Docker restart node js (development)",
			"type": "shell",
			"command": "docker-compose -f docker-compose-development.yml restart",
			"group": "build"
		},
		{
			"label": "Docker stop node js (development)",
			"type": "shell",
			"command": "docker-compose -f docker-compose-development.yml stop",
			"group": "build"
		},
		{
			"label": "Docker start node js (development)",
			"type": "shell",
			"command": "docker-compose -f docker-compose-development.yml start",
			"group": "build"
		},
		{
			"label": "PM2 delete all process",
			"type": "shell",
			"command": "npx pm2 delete all",
			"group": "build"
		},
		{
			"label": "PM2 GUI",
			"type": "shell",
			"command": "npx pm2 plus",
			"group": "build"
		},
		{
			"label": "PM2 describe",
			"type": "shell",
			"command": "npx pm2 describe dist/Server",
			"group": "build"
		},
		{
			"label": "PM2 monitor all",
			"type": "shell",
			"command": "npx pm2 monit",
			"group": "build"
		},
		{
			"label": "PM2 logger",
			"type": "shell",
			"command": "npx pm2 logs",
			"group": "build"
		},
		{
			"label": "PM2 stop all",
			"type": "shell",
			"command": "npx pm2 stop all",
			"group": "build"
		},
		{
			"label": "PM2 restart all",
			"type": "shell",
			"command": "npx pm2 restart all",
			"group": "build"
		},
		{
			"label": "PM2 reload all",
			"type": "shell",
			"command": "npx pm2 reload all",
			"group": "build"
		},
		{
			"label": "PM2 update",
			"type": "shell",
			"command": "npx pm2 updatePM2",
			"group": "build"
		},
		{
			"label": "PM2 ping",
			"type": "shell",
			"command": "npx pm2 ping",
			"group": "build"
		},
		{
			"label": "Start dev server",
			"type": "shell",
			"command": "npm install && npm update && npm run start:inspect",
			"options": {
				"env": {
					"EXECUTION_POINT": "NPM"
				}
			},
			"group": "build"
		},
		{
			"label": "Clear all logs",
			"type": "shell",
			"command": "npx pm2 flush",
			"group": "build"
		}
	]
}
